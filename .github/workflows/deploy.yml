name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Build
        run: |
          echo "Starting build process..."
          echo "Current directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json
          echo "Running npm run build..."
          npm run build
          echo "Build command completed, checking exit code: $?"
          echo "Checking if dist directory exists:"
          ls -la dist/ || echo "dist directory not found!"
          echo "Build process finished"
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          
      - name: Deploy to root
        run: |
          # Check if dist directory exists
          if [ ! -d "dist" ]; then
            echo "ERROR: dist directory not found! Build must have failed."
            exit 1
          fi
          
          # Remove ALL files except .git directory
          find . -maxdepth 1 -type f -delete
          find . -maxdepth 1 -type d ! -name '.git' ! -name '.' -exec rm -rf {} +
          
          # Copy all built files to root directory
          cp -r dist/* .
          
          # Verify the built index.html is now the main one
          ls -la index.html
          echo "Built React app deployed to root directory"
          echo "Contents of index.html (first 10 lines):"
          head -10 index.html
          echo "Contents of assets directory:"
          ls -la assets/
          echo "Checking if main.tsx exists (it shouldn't):"
          ls -la src/ 2>/dev/null || echo "src directory not found (good - this is built version)"
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

